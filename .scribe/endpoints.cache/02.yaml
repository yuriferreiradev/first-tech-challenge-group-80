## Autogenerated by Scribe. DO NOT MODIFY.

name: Product
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Index
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Product 1",
                "price": 100
              },
              {
                "id": 2,
                "name": "Product 2",
                "price": 200
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/categories/{category}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search By Category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category:
        name: category
        description: 'The ID of the category to search.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      category: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Product 1",
                "price": 100,
                "category_id": 1
              },
              {
                "id": 2,
                "name": "Product 2",
                "price": 200,
                "category_id": 1
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Store
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: '"New Product"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 19.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: '"New Product"'
      price: 19.99
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "id": 1,
              "name": "New Product",
              "price": 19.99
            },
            "message": "ok"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "Error: Something went wrong"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/products/{product}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Update
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product:
        name: product
        description: 'The ID of the product to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      product: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nullable The name of the product.'
        required: false
        example: '"Edited Product"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      price:
        name: price
        description: 'nullable The price of the product.'
        required: false
        example: 29.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: '"Edited Product"'
      price: 29.99
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "New Product",
              "price": 19.99
            },
            "message": "ok"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "Error: Something went wrong"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{product}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Delete
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product:
        name: product
        description: 'The ID of the product to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      product: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Success, 1 records deleted"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "Error: Something went wrong"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
